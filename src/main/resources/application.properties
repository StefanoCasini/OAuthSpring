# MariaDB
spring.datasource.url=jdbc:mariadb://localhost:3306/demo_oauth_db
spring.datasource.username=demo_user
spring.datasource.password=Password123!
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

#log
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.security=DEBUG


# OAuth2 configuration (esempio con Google)
spring.security.oauth2.client.registration.google.client-id=472547863607-8vuaj994vsikit1uspo7shuplvoqr9g3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.thymeleaf.cache=false
server.port=8080
